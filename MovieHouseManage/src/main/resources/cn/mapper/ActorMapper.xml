<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.mapper.ActorMapper">
  <resultMap id="BaseResultMap" type="cn.entity.Actor">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="actorName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="actorSex" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="address" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="born" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, actorName, actorSex, address, born
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_actor
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByIds" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_actor
    where id in
    <foreach collection="list" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_actor
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.entity.Actor">
    insert into t_actor (id, actorName, actorSex, 
      address, born)
    values (#{id,jdbcType=INTEGER}, #{actorname,jdbcType=VARCHAR}, #{actorsex,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{born,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.entity.Actor">
    insert into t_actor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="actorname != null">
        actorName,
      </if>
      <if test="actorsex != null">
        actorSex,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="born != null">
        born,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="actorname != null">
        #{actorname,jdbcType=VARCHAR},
      </if>
      <if test="actorsex != null">
        #{actorsex,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="born != null">
        #{born,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.entity.Actor">
    update t_actor
    <set>
      <if test="actorname != null">
        actorName = #{actorname,jdbcType=VARCHAR},
      </if>
      <if test="actorsex != null">
        actorSex = #{actorsex,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="born != null">
        born = #{born,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.entity.Actor">
    update t_actor
    set actorName = #{actorname,jdbcType=VARCHAR},
      actorSex = #{actorsex,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      born = #{born,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>